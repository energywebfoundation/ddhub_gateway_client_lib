"""
    DDHub Client Gateway

    DDHub Client Gateway  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from pyexpat import model
import sys
import unittest

import ddhub_gateway_client
from ddhub_gateway_client.model.get_topic_dto import GetTopicDto


class TestGetTopicDto(unittest.TestCase):
    """GetTopicDto unit test stubs"""
    topic_id = "123456789"
    topic_name = "Topic_JSON_Test_B1"
    topic_schema_type = "JSD7"
    topic_version = "1.0.0-alpha.beta"
    topic_owner = "ddhub.apps.energyweb.iam.ewc"
    topic_tags = ['test_tag']

    def setUp(self):
        self.model= GetTopicDto(
            id=self.topic_id,
            name=self.topic_name, 
            schema_type=self.topic_schema_type,
            version=self.topic_version, 
            owner=self.topic_owner, 
            tags=self.topic_tags
            )

    def tearDown(self):
        pass
    
    def testGetTopicDto(self):
        t_id = self.model.id
        t_name = self.model.name
        t_schema_type = self.model.schema_type
        t_version = self.model.version
        t_owner = self.model.owner
        t_tags = self.model.tags
        
        self.assertEqual(self.topic_id, t_id)
        self.assertEqual(self.topic_name, t_name)
        self.assertEqual(self.topic_schema_type, t_schema_type)
        self.assertEqual(self.topic_version, t_version)
        self.assertEqual(self.topic_owner, t_owner)
        self.assertEqual(self.topic_tags, t_tags)

    def testGetTopicDto_MissingParams(self):
        """Test GetTopicDto"""
        self.assertRaises(TypeError, GetTopicDto)
        self.assertRaises(TypeError, GetTopicDto, 
            name=self.topic_name, 
            schema_type=self.topic_schema_type, 
            version=self.topic_version, 
            owner=self.topic_owner, 
            tags=self.topic_tags
        )
        self.assertRaises(TypeError, GetTopicDto, 
            id=self.topic_id,
            schema_type=self.topic_schema_type, 
            version=self.topic_version, 
            owner=self.topic_owner, 
            tags=self.topic_tags
        )
        self.assertRaises(TypeError, GetTopicDto, 
            id=self.topic_id,
            name=self.topic_name, 
            version=self.topic_version, 
            owner=self.topic_owner, 
            tags=self.topic_tags
        )
        self.assertRaises(TypeError, GetTopicDto, 
            id=self.topic_id,
            name=self.topic_name, 
            schema_type=self.topic_schema_type, 
            owner=self.topic_owner, 
            tags=self.topic_tags
        )
        self.assertRaises(TypeError, GetTopicDto, 
            id=self.topic_id,
            name=self.topic_name, 
            schema_type=self.topic_schema_type, 
            version=self.topic_version, 
            tags=self.topic_tags
        )
        self.assertRaises(TypeError, GetTopicDto, 
            id=self.topic_id,
            name=self.topic_name, 
            schema_type=self.topic_schema_type, 
            version=self.topic_version, 
            owner=self.topic_owner, 
        )

if __name__ == '__main__':
    unittest.main()
